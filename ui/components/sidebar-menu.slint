import { SidebarButton } from "sidebar-button.slint";
import { Palette } from "../palette.slint";

export enum Menu {
    Generators,
    Filters,
    Settings,
    Closed,
}

struct SidebarButtonData {
    icon: string,
    menu: Menu,
}

export component SidebarMenu inherits Rectangle {
    y: 0;
    width: 47px;

    background: Palette.background-main;

    out property <int> active_menu: 0;

    callback menu_change(Menu);

    in property <[SidebarButtonData]> buttons: [
        { icon: "", menu: Menu.Generators },
        { icon: "", menu: Menu.Filters },
    ];

    VerticalLayout {
        VerticalLayout {
            for but[i] in buttons: SidebarButton {
                icon: but.icon;
                active: i == root.active_menu;
                clicked => {
                    if self.active {
                        root.active_menu = 999;
                        root.menu_change(Menu.Closed)
                    } else {
                        root.active_menu = i;
                        root.menu_change(but.menu)
                    }
                }
            }
        }

        VerticalLayout {
            alignment: end;
            SidebarButton {
                icon: "";
                active: -1 == root.active_menu;
                clicked => {
                    if self.active {
                        root.active_menu = 999;
                        root.menu_change(Menu.Closed)
                    } else {
                        root.active_menu = -1;
                        root.menu_change(Menu.Settings)
                    }
                }
            }
        }
    }     
}