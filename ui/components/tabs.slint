import { BorderHorizontal, BorderVertical } from "borders.slint";
import { Palette } from "../palette.slint";
component TabButton inherits Rectangle {
    in-out property <string> title;
    in-out property <bool> active;

    callback clicked();

    width: 150px;

    ta := TouchArea {
        clicked => {
            root.clicked();
        }
    }

    if root.active: BorderHorizontal {
        background: Palette.primary;
    }

    Rectangle {
        Text {
            x: 15px;
            y: 11px;
            width: parent.width - 45px;
            text <=> root.title;
            font-size: 14px;
            font-family: "Lora";
            states [
                active when root.active: {
                    color: Palette.text;
                }
                inactive when !root.active: {
                    color: Palette.text-inactive;
                }
            ]
        }

        Text {
            x: parent.width - 25px;
            y: 15px;
            font-size: 10px;
            font-family: "lineicons";
            text: "î«Ž";

            close-ta := TouchArea {
                
            }
        }

        BorderVertical {
            x: parent.width - 1px;
        }
    }

    if !active: BorderHorizontal {
        y: parent.height - 1px;
    }

    states [
        active when self.active: {
            background: Palette.background-secondary;
        }
        hovered when ta.has-hover: {
            background: Palette.background-secondary;
        }
        not-hovered when !ta.has-hover: {
            background: Palette.background-main;
        }
    ]
}

export component Tabs inherits VerticalLayout {
    property <int> active_tab;
    in-out property <[string]> tabs;

    HorizontalLayout {
        height: 40px;

        for tab[i] in tabs: TabButton {
            title: tab;
            height: parent.height;
            active: i == active_tab;
            clicked => {
                active_tab = i;
            }
        }

        Rectangle {
            background: Palette.background-main;
            BorderHorizontal {
                y: parent.height - 1px;
            }
        }
    }

    Rectangle {
        background: Palette.background-secondary;
    }
}